<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style x:Key="BgBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="CornerRadius" Value="8"/>
        <Setter Property="Margin" Value="0,2,0,2"/>
        <Setter Property="Opacity" Value="0.9"/>
    </Style>
    <Style x:Key="TitleTxt" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{Binding BgBrush}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style x:Key="ThemesTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{Binding BgBrush}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style x:Key="tvButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="6,0,0,0"/>
        <Setter Property="Command" Value="{Binding VideoCommand}"/>
        <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource Mode=Self},Path=Name}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="0.8"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Opacity" Value="1"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="RadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="{Binding BgBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border x:Name="RBtnBorder" Background="{TemplateBinding Background}" CornerRadius="8" Height="28" Width="66">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter  Property="Opacity" Value="1"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter  Property="Opacity" Value="0.6"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="Pop_NumButton" TargetType="{x:Type Button}" >
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{Binding BgBrush}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Margin" Value="2,2,2,2"/>
        <Setter Property="Width" Value="74"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Command" Value="{Binding SearchCommand}"/>
        <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource Mode=Self},Path=Content}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="UpgateBtnBorder" Background="{TemplateBinding Background}"  BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="0" CornerRadius="8" >
                        <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="UpgateBtnBorder" Property="Background" Value="#ebebeb"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                            <Setter Property="FontSize" Value="15"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="UpgateBtnBorder" Property="Background" Value="white"/>
                            <Setter Property="FontWeight" Value="Normal"/>
                            <Setter Property="FontSize" Value="14"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ListItemBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Opacity" Value="0.9"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="1"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Opacity" Value="0.9"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>